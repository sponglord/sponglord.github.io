* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    color: #d4d4d1;
    font-family: "Open Sans";
}

body{
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    background-color: #1e1e1e;
}

.directions-display-container {
    background-color: #1e1e1e;
    display: flex;
    justify-content: center;
}

.directions-display {
    width: 700px;
    height: 220px;
    font-size: 15px;

    display: flex;
    flex-direction: column;
    /* Possible values: center | flex-start | flex-end | stretch | baseline */
    justify-content: flex-end;
}

.directions-display p{
    text-align: center;
}

.direction-text-marker{
    margin-top: 10px;
    font-size: 20px;
    opacity: 0.6;
}

.directions-text{
    margin-bottom: 15px;
    opacity: 0.7;
}

.direction-grid-container {
    /*background-color: #1e1e1e;*/
    display: flex;
    justify-content: center;
}

.direction-grid {
    min-width: 400px;
    /*height: 220px;*/
    display: flex;
    justify-content: space-evenly;
}

.direction-grid-item {
    width: 60px;
    height: 60px;
    opacity: 0.25;
    position: relative;
    bottom: -17px
}

.direction-grid-item.selected{
    opacity: 1;
}

.direction-grid-item.deselected{
    opacity: 0.25;
}

.hide-item{
    display: none
}

.end-item.left{
    transform: rotate(-31deg);
}
.end-item.right{
    transform: rotate(31deg);
}

.next-to-end-item{
    bottom: 33px;
}

.next-to-end-item.left{
    transform: rotate(-17deg);
    left: -13px;
}

.next-to-end-item.right{
    transform: rotate(17deg);
    left: 13px
}

.middle-item{
    bottom: 55px;
}

.middle-item.left{
    transform: rotate(-6deg);
    bottom: 58px;
    left: -4px;
}

.middle-item.right{
    transform: rotate(6deg);
    bottom: 58px;
    left: 4px;
}

.instructions-container {
    background-color: darkolivegreen;
    display: flex;
    justify-content: center;
}

.instructions {
    font-size: 20px;
    width: 700px;
    height: 300px;

    display: flex;

    /* Changes the direction of the container from the default row value (which stacks elements horizontally */
    flex-direction: column;
    /*align-items: center;*/

    /* Since .instructions has an explicit height, items can be positioned vertically inside of it.
    The official specification calls this “cross-axis” alignment.
    Vertical alignment is defined by adding an align-items property to a flex container
    Possible values: center | flex-start | flex-end | stretch | baseline */
    justify-content: flex-start; /*center*/
}

.instructions p{
    text-align: center;
    margin: 0 30px;
}

.buttons-container {
    padding: 20px 5px;
    /*margin-top: auto;*/

    /* Flex box styling props */
    display: flex;
    justify-content: center;

}

.buttons{
    display: flex;
    justify-content: center;
}

.button-item{
    width: 64px;
    height: 64px;
    cursor: pointer;
}

.footer-container {
    background-color: #3b7e80;
    padding: 20px 0;
    font-size: 15px;
    border-top: #000 1px solid;
    cursor: pointer;

    /*margin-top: auto;*/ /* pushes footer to bottom */
    flex-shrink: 0; /* sticks footer to bottom of instructions content */

    /* Flex box styling props */

    display: flex;/* Set this property to enable the flexbox layout mode within this container - turns it into a 'flex-container' */

    justify-content: center;
    /* Define the horizontal alignment of the flexbox container's items.
    In the past we would have added" margin: 0 auto" to the .menu item below - but now we set a property on the parent element
    NOTE: Flex containers only know how to position elements that are one level deep.
     Possible values: center | flex-start | flex-end | space-around | space-between */
}

.footer {
    /*border: 1px solid #fff;  !* For debugging *!*/
    width: 700px;

    /* Flex box styling props */

    display: flex;/* Turns our .menu into a nested flex container */
    justify-content: space-between;
    /* space-between spreads its items out across its entire width - distributing extra horizontal space space between items.
     "space-around" - distributes extra horizontal space to either side of each item */
}

.desc-container {
    display: flex;
    justify-content: flex-end;
}

.desc {
    margin-left: 10px;
}

.copyright {
    margin-left: 10px;
}

.tag{
    margin-right: 10px;
}